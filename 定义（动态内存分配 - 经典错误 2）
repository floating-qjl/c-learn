#define _CRT_SECURE_NO_WARNINGS 1
#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <windows.h>
int main()
{
	//4.使用free释放动态开辟内存的一部分

	int* p = (int*)malloc(40);
	if (p == NULL)
		return 0;
	int i = 0;
	for (i = 0;i, 10;i++)
	{
		*p++ = i;
	}
	//回收空间
	//此时 p 的地址已经改变，而释放整个空间需要空间首地址
	free(p);
	p = NULL;


	//5.对同一个动态内存开辟空间的多次释放
	int* p2 = (int*)malloc(40);
	if (p == NULL)
		return 0;
	free(p);
	p = NULL;
	//......
	free(p);
	//谁开辟谁回收，谁申请谁回收 - 准则
	//可以将 p 指向NULL，即可避免多次释放


	//6.动态开辟内存忘记释放
	while (1)
	{
		malloc(1);
		Sleep(1000);
	}
	//总是在开辟空间，却从未释放，会造成内存空间的大量占用


	return 0;
}
